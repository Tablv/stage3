一.状态管理机制
    2.session机制
        因为cookie保存在浏览器,用户可以修改删除或禁用
        cookie(数据不安全),cookie保存的数据较少,为了
        解决这个问题,使用session机制

        session的数据是保存在服务器端的,用户无法修改其中的数据

        session是基于cookie实现的
        在express使用session需要借助于 express-session 模块

        01_session.js

        session的设置与获取,都是由req完成的
        服务器端与浏览器保存的是一一对应的键值对(connect.sid)
        服务器端保存的是key:value
        浏览器保存的是key
        如果浏览器的key被修改,则丢失与服务器一一对应的关联


        练习:
            使用session,完成登录的功能
                localhost:4000 如果未登录,跳转到登录界面
                如果已登录,跳转到欢迎界面
        
        练习02:
            实现注册登录的功能
            1.localhost:4000  如果登录了,直接跳转到欢迎页面,如果没有登录,或登录状态失效,则跳转到登录页面
            2.登录页面设定一个注册按钮,点击跳转到注册页面
            3.注册页面输入用户名与密码,点击注册,将用户名密码保存进数据库
            4.注册页面设定一个登录按钮,点击跳转到登录页面
            5.输入用户名密码,根据输入的用户名与密码到数据库中去查询
            6.正确,跳转到欢迎页面
            7.不正确,提示用户,用户名或者密码错误
                (提示用户: 是密码还是密码错误)
        实现:见day08

二:加密功能
    MD5加密
        当把数据保存进数据库时,一些敏感的数据需要避免明文保存,防止服务器被攻破时,数据的泄露
    
    MD5:message digest 信息摘要算法第五代
        功能:检验数据的完整性与一致性.
    
        特点:
        1.无论文件有多大,数据有多长,最后算出来的md5值得长度是一样.
        2.相同的文件,算出来的md5值一定相同,与文件的名称,保存的位置没有任何关系;
        不同的文件,算出来的md5值肯定不一样,哪怕多一个空格,一个符合,最后的md5值都会发生很大的变化
        3.从数据去计算其MD5值很容易,但是从MD5值反推原数据,很难.

    nodejs中的MD5使用
        02_md5.js

三. gm 的使用
    GraphicsMagick是一个图片处理工具

    使用gm的主要原因:
        该工具提供了很多语言的接口的命令
    安装之后配置环境变量
    03_gm.js

    练习03:
    上传图片,剪切上传后的图片